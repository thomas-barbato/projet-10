# Generated by Django 3.2.18 on 2023-03-27 11:07

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('user_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=128)),
                ('last_name', models.CharField(blank=True, max_length=128)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('is_admin', models.BooleanField(default=False)),
                ('username', models.CharField(blank=True, max_length=255)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('project', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('WEB', 'Site web'), ('APP', 'Application'), ('ANDROID', 'Android'), ('IOS', 'Ios')], max_length=15)),
                ('author_user_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='project_created_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Issues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('desc', models.CharField(max_length=255)),
                ('tag', models.CharField(choices=[('BUG', 'Bug'), ('AMELIORATION', 'Amélioration'), ('TACHE', 'Tâche')], max_length=15)),
                ('priority', models.CharField(choices=[('FAIBLE', 'Faible'), ('MOYENNE', 'Moyenne'), ('ELEVEE', 'Élevée')], max_length=15)),
                ('status', models.CharField(choices=[('A_FAIRE', 'A faire'), ('EN_COURS', 'En cours'), ('TERMINE', 'Terminé')], max_length=15)),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created Time')),
                ('assignee_user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='issue_assigned_to', to=settings.AUTH_USER_MODEL)),
                ('author_user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='issue_author', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.projects')),
            ],
        ),
        migrations.CreateModel(
            name='Contributors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_contributor', to='api.projects')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_contributor', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('comment_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=500)),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created Time')),
                ('author_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.issues')),
            ],
        ),
    ]
