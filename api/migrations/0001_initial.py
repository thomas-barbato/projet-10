# Generated by Django 3.2.18 on 2023-03-21 11:30

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_id', models.AutoField(editable=False, primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=128)),
                ('last_name', models.CharField(blank=True, max_length=128)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('is_admin', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('project', models.PositiveIntegerField(editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=500)),
                ('description', models.CharField(max_length=500)),
                ('type', models.CharField(choices=[('projet', 'project'), ('produit', 'product'), ('application', 'application')], default='project', max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Issues',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=500)),
                ('desc', models.CharField(max_length=500)),
                ('tag', models.CharField(choices=[('bug', 'bug'), ('amélioration', 'improvement'), ('tâche', 'task')], default='task', max_length=15)),
                ('priority', models.CharField(choices=[('faible', 'low'), ('moyenne', 'average'), ('élevée', 'high')], default='average', max_length=15)),
                ('status', models.CharField(choices=[('à faire', 'to do'), ('en cours', 'in progress'), ('terminée', 'done')], default='to do', max_length=15)),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created Time')),
                ('assignee_user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='assignee', to=settings.AUTH_USER_MODEL)),
                ('author_user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='author', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.projects')),
            ],
        ),
        migrations.CreateModel(
            name='Contributors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('createur', 'creator'), ('administrateur', 'admin'), ('technician', 'technician')], default='creator', max_length=15)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.projects')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'permissions': [('DELETE', 'can delete'), ('EDIT', 'can edit ticket'), ('CLOSE', 'can close ticket'), ('ONLY_READ', 'can only read')],
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('comment_id', models.PositiveIntegerField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=500)),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='Created Time')),
                ('author_user', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
                ('issue', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='api.issues')),
            ],
        ),
    ]
